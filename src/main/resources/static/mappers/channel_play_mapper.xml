<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soccer.web.channel.play.vo.ChannelPlayVO">

	<!-- channelPlayVO resultMap -->
	<resultMap type="com.soccer.web.channel.play.vo.ChannelPlayVO" id="channelPlayVO">
		<result property="channelPlayIdx" column="channel_play_idx"/>
		<result property="memberIdx" column="member_idx"/>
		<result property="channelIdx" column="channel_idx"/>
		<result property="channelPlayTitle" column="channel_play_title"/>
		<result property="channelPlayDate" column="channel_play_date"/>
		<result property="channelPlayImage" column="channel_play_image"/>
		<result property="channelPlayVideo" column="channel_play_video"/>
		<result property="channelPlayStep" column="channel_play_step"/>
		<result property="memberNick" column="member_nick"/>
	</resultMap>
	
	<resultMap type="com.soccer.web.channel.play.vo.PlayMatchingVO" id="playMatchingVO">
		<result property="channelPlayMatchingIdx" column="channel_play_matching_idx"/>
		<result property="channelPlayMatchingPlay1" column="channel_play_matching_play1"/>
		<result property="channelPlayMatchingPlay2" column="channel_play_matching_play2"/>
		<result property="channelPlayMatchingStep" column="channel_play_matching_step"/>
	</resultMap>
	
	<!-- 영상 게시글의 리스트를 출력 -->
	<select id="selectChannelPlayList" parameterType="com.soccer.web.channel.play.vo.ChannelPlayVO" resultMap="channelPlayVO">
		SELECT * 
		FROM channel_play 
		INNER JOIN member 
			ON channel_play.member_idx = member.member_idx 
		WHERE channel_idx = #{channelIdx}
		<!-- <if test="searchKeyword != null and searchKeyword != ''">
			WHERE ${searchCondition} LIKE CONCAT('%', #{searchKeyword}, '%')
		</if> -->
		ORDER BY channel_play_idx DESC 
		LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
	</select>
	
	<select id="selectChannelMainPlayList" parameterType="com.soccer.web.channel.vo.ChannelVO" resultMap="channelPlayVO">
		SELECT * 
		FROM channel_play 
		INNER JOIN member 
			ON channel_play.member_idx = member.member_idx 
		WHERE channel_idx = #{channelIdx} 
		<!-- <if test="searchKeyword != null and searchKeyword != ''">
			WHERE ${searchCondition} LIKE CONCAT('%', #{searchKeyword}, '%')
		</if> -->
		ORDER BY channel_play_idx DESC
		LIMIT 10			
	</select>
	
	<!-- 영상 게시글 리스트의 size 확인 -->
	<select id="selectChannelPlayListTotCnt" parameterType="com.soccer.web.channel.play.vo.ChannelPlayVO" resultType="int">
		SELECT COUNT(*) totcnt 
		FROM channel_play
		<!-- <if test="searchKeyword != null and searchKeyword != ''">
			WHERE ${searchCondition} LIKE CONCAT('%', #{searchKeyword}, '%')
		</if> -->
	</select>
	
	<!-- 영상 게시글의 세부사항을 출력하는 쿼리문 -->
	<select id="selectChannelPlayDetail" parameterType="int" resultType="com.soccer.web.channel.play.vo.ChannelPlayVO">
		SELECT * 
		FROM channel_play 
		INNER JOIN member 
			ON channel_play.member_idx = member.member_idx 
		WHERE channel_play_idx = #{channelPlayIdx};
	</select>
	
	<!-- 영상 게시글을 추가하는 메서드(승인 전) -->
	<insert id="insertChannelPlay" parameterType="com.soccer.web.channel.play.vo.ChannelPlayVO" useGeneratedKeys="true" keyProperty="channelPlayIdx">
		INSERT INTO channel_play
		VALUES 
				(
					default,
					#{memberIdx},
					#{channelIdx},
					#{channelPlayTitle},
					default,
					#{channelPlayImage},
					#{channelPlayVideo},
					default
				)
	</insert>
	
	<!-- 영상 게시글을 수정하는 메서드(승인 전으로 다시 바꾸어야 함) -->
	<update id="updateChannelPlay" parameterType="com.soccer.web.channel.play.vo.ChannelPlayVO">
		UPDATE channel_play 
		SET 
			channel_play_title = #{channelPlayTitle},
			channel_play_date = default,
			channel_play_image = #{channelPlayImage},
			channel_play_video = #{channelPlayVideo},
			channel_play_step = default
		WHERE channel_play_idx = #{channelPlayIdx}
	</update>
	
	<!-- 영상 게시글을 삭제하는 메서드 -->
	<delete id="deleteChannelPlay" parameterType="int">
		DELETE * FROM channel_play 
		WHERE 
			channel_play_idx = #{channelPlayIdx}
	</delete>
	
	<!-- 작동 안할시 not in 기능 사용 -->
	<select id="opponentList" parameterType="integer" resultMap="channelPlayVO">
		SELECT * FROM channel_play AS play
		WHERE channel_idx = #{channelIdx}
			AND NOT EXISTS(SELECT 
							matching.channel_play_matching_play1, 
							matching.channel_play_matching_play2 
						   FROM 
						   	channel_play_matching as matching
						   WHERE 
						   	play.channel_play_idx = matching.channel_play_matching_play1
						   OR
						   	play.channel_play_idx = matching.channel_play_matching_play2
						   )
	</select>
	
	<insert id="insertMatching" parameterType="com.soccer.web.channel.play.vo.PlayMatchingVO">
		INSERT INTO channel_play_matching
		VALUES (
				default,
				#{channelPlayMatchingPlay1},
				#{channelPlayMatchingPlay2},
				'applying'
				)
	</insert>
	
	<select id="applyingMatchingList" parameterType="integer" resultMap="playMatchingVO">
		SELECT 
			channel_play_matching.channel_play_matching_idx,
			channel_play_matching.channel_play_matching_play1,
			channel_play_matching.channel_play_matching_play2,
			channel_play_matching.channel_play_matching_step, 
		FROM channel_play_matching
		INNER JOIN channel_play 
			ON channel_play_matching.channel_play_matching_play1 = channel_play.channel_play_idx
		WHERE channel_play.channel_idx = #{channelIdx}
			AND channel_play_matching.channel_play_matching_step = "applying"
	</select>
	
	<select id="waitingMatchingList" parameterType="integer" resultMap="playMatchingVO">
		SELECT 
			channel_play_matching.channel_play_matching_idx,
			channel_play_matching.channel_play_matching_play1,
			channel_play_matching.channel_play_matching_play2,
			channel_play_matching.channel_play_matching_step, 
		FROM channel_play_matching
		INNER JOIN channel_play 
			ON channel_play_matching.channel_play_matching_play2 = channel_play.channel_play_idx
		WHERE channel_play.channel_idx = #{channelIdx}
			AND channel_play_matching.channel_play_matching_step = "applying"
	</select>
	
	<update id="applyMatching" parameterType="integer">
		UPDATE channel_play_matching
			SET channel_play_matching_step = 'OK'
		WHERE channel_play_matching_idx = #{matchingIdx}
	</update>
	
	<delete id="denieMatching" parameterType="integer">
		DELETE FROM channel_play_matching
		WHERE channel_play_matching_idx = #{matchingIdx}
	</delete>
</mapper>